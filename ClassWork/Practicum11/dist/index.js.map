{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA,SAAS,QAAQ,CAAC,CAAS,EAAE,CAAS;IACnC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;IAClD,CAAC;IACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC9C,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;IACvE,CAAC;IACC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QACvC,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;IAC7D,CAAC;IAEH,OAAO,CAAC,GAAG,CAAC,CAAC;AACb,CAAC;AAYD,SAAS,SAAS,CAAC,GAAQ;IACvB,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;QAClB,MAAM,OAAO,GAAG,GAAgB,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,KAAK,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;AACL,CAAC;AAED,SAAS,UAAU,CAAC,GAAQ;IACxB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IACjC,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;IACpC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IACjC,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;AACjD,CAAC;AAED,MAAM,MAAM,GAAQ;IAChB,IAAI,EAAE,KAAK;IACX,KAAK,EAAE,IAAI;IACX,IAAI,EAAE,IAAI;IACV,UAAU,EAAE,KAAK;CACpB,CAAA;AACD,SAAS,CAAC,MAAM,CAAC,CAAA","sourcesContent":["function division(a: number, b: number): number {\r\n   if (b === 0) {\r\n      throw new Error(\"Деление на ноль недопустимо.\");\r\n    }\r\n    if (!Number.isFinite(a) && !Number.isFinite(b)) {\r\n       throw new Error(\"Оба аргумента должны быть корректными числами.\");\r\n  }\r\n    if (Number.isNaN(a) || Number.isNaN(b)) {\r\n      throw new Error(\"Один из аргументов - это значения NaN\");\r\n  }\r\n\r\nreturn a / b;\r\n}\r\n\r\n// console.log(division(10, 3)); // 3.33\r\n// console.log(division(10, 0)); // \r\n\r\ninterface Car {\r\n    make: string;\r\n    model: string;\r\n    year: number;\r\n    isElectric: boolean;\r\n}\r\n\r\nfunction printInfo(car: Car): void {\r\n    for (let key in car) {\r\n        const typeKey = key as keyof Car;\r\n        console.log(typeKey);\r\n        console.log(`${typeKey}: ${car[typeKey]}`);\r\n    } \r\n}\r\n\r\nfunction printInfo1(car: Car): void {\r\n    console.log(`Make: ${car.make}`);\r\n    console.log(`Modele: ${car.model}`);\r\n    console.log(`Year: ${car.year}`);\r\n    console.log(`isElectric: ${car.isElectric}`);\r\n}\r\n\r\nconst newCar: Car = {\r\n    make: 'BMW',\r\n    model: 'M4',\r\n    year: 2023,\r\n    isElectric: false,\r\n}\r\nprintInfo(newCar)"]}