{"version":3,"file":"taskController.js","sourceRoot":"","sources":["../../src/controllers/taskController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { Task } from \"models/Task\";\r\n\r\n// создади тип при получени входящих данные для обновления\r\ntype reqBodyUpdate = { title: string | undefined, completed: boolean | undefined };\r\n\r\n// Имитация БД\r\nlet tasks: Task[] = [];\r\nlet currentId: number = 1;\r\n\r\n// Создание задачи\r\nexport const createTask = (req: Request, res: Response) => {\r\n    const { title }: { title: string } = req.body;\r\n\r\n    if (!title) {\r\n        return res.send({ error: 'Title is required' });\r\n    }\r\n\r\n    const newTask: Task = {\r\n        id: currentId++,\r\n        title,\r\n        completed: false\r\n    }\r\n    tasks.push(newTask);\r\n    res.status(201).send({ message: 'Task create', newTask });\r\n}\r\n\r\n// Получить все задачи\r\nexport const getTasks = (_: Request, res: Response) => {\r\n    res.send(tasks);\r\n}\r\n\r\n// Получить задачу по id\r\nexport const getTaskById = (req: Request, res: Response) => {\r\n    const id: number = Number(req.params.id);\r\n    const task = tasks.find(task => task.id === id);\r\n\r\n    if(!task){\r\n        return res.status(404).send({error: 'Task not found'});\r\n    }\r\n    // возвращаем ответ \r\n    res.status(200).send(task);\r\n}\r\n\r\n// Обновить задачу по id\r\nexport const updateTaskById = (req: Request, res: Response) => {\r\n    const id: number = Number(req.params.id);\r\n    const { title, completed }: reqBodyUpdate = req.body;\r\n\r\n    const indexTask = tasks.findIndex(task => task.id === id);\r\n\r\n    if (indexTask === -1) {\r\n        return res.status(404).send({ error: 'Task not found' });\r\n    }\r\n\r\n    // tasks[indexTask] = {\r\n    //     id: 2,\r\n    //     title: \"Text\",\r\n    //     completed: false\r\n    // }\r\n    tasks[indexTask] = {\r\n        id: tasks[indexTask].id,\r\n        // ...tasks[indexTask],// = id: 2, title: \"Text\", completed: false\r\n        title: title ?? tasks[indexTask].title,\r\n        completed: completed ?? tasks[indexTask].completed\r\n    }\r\n    res.send(tasks[indexTask]);\r\n}\r\n\r\n// Удаление задачи по id\r\nexport const deleteTaskById = (req: Request, res: Response) => {\r\n    const id: number = Number(req.params.id);\r\n    tasks = tasks.filter(task => task.id !== id);\r\n    res.status(204).send({message: 'Object deleted successfully'});\r\n}"]}