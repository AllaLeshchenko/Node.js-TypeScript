{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA,SAAS,KAAK,CAAC,IAAY;IACvB,OAAO,qBAAqB,IAAI,EAAE,CAAC;AACvC,CAAC;AAED,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;AAClC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAEzB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAE3B,IAAI,KAAK,GAAW,EAAE,CAAC;AACvB,IAAI,QAAQ,GAAW,SAAS,CAAC;AACjC,IAAI,UAAU,GAAY,KAAK,CAAC;AAEhC,SAAS,GAAG,CAAC,CAAS,EAAE,CAAS;IAC7B,OAAO,CAAC,GAAC,CAAC,CAAC;AACf,CAAC;AAED,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AAE3B,MAAM,IAAI,GAAgC;IACtC,IAAI,EAAE,OAAO;IACb,GAAG,EAAE,EAAE;CACV,CAAA;AAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAEvB,gFAAgF;AAChF,SAAS,UAAU,CAAC,MAAc;IAC9B,IAAI,MAAM,GAAC,CAAC;QAAE,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IAChE,OAAO,IAAI,CAAC,EAAE,GAAC,MAAM,GAAC,MAAM,CAAC;AACjC,CAAC;AACD,MAAM,CAAC,GAAW,CAAC,CAAC;AACpB,MAAM,IAAI,GAAW,UAAU,CAAC,CAAC,CAAC,CAAC;AACnC,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAOzE,MAAM,OAAO,GAAS;IAClB,IAAI,EAAE,MAAM;IACZ,GAAG,EAAE,EAAE;IACP,KAAK,EAAE,mBAAmB;CAC7B,CAAC;AAEF,MAAM,QAAQ,GAAiD;IAC3D,IAAI,EAAE,MAAM;IACZ,GAAG,EAAE,EAAE;IACP,KAAK,EAAE,mBAAmB;CAC7B,CAAC;AAEF,SAAS,aAAa,CAAC,IAAkD;IACrE,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClC,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAChC,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AACxC,CAAC;AAAA,CAAC;AAEF,SAAS,cAAc,CAAC,IAAU;IAC9B,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClC,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAChC,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AACxC,CAAC;AAAA,CAAC;AAEF,aAAa,CAAC,OAAO,CAAC,CAAC;AACvB,cAAc,CAAC,OAAO,CAAC,CAAC;AAExB,SAAS,OAAO,CAAC,WAAmB;IAChC,OAAO,iBAAiB,WAAW,EAAE,CAAA;AACzC,CAAC;AACD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC","sourcesContent":["function greet(name: string): string {\r\n    return `Hello, my name is ${name}`;\r\n}\r\n\r\nconst resultGreet = greet('Alex');\r\nconsole.log(resultGreet);\r\n\r\nconsole.log(greet('Alex'));\r\n\r\nlet count: number = 10;\r\nlet username: string = 'JohnDoe';\r\nlet isLoggetIn: boolean = false;\r\n\r\nfunction add(a: number, b: number): number {\r\n    return a+b;\r\n}\r\n\r\nconsole.log(add(75346, 1));\r\n\r\nconst user: {name: string, age: number} = {\r\n    name: 'Alice',\r\n    age: 30,\r\n}\r\n\r\nconsole.log(user.name);\r\n\r\n// Реализовать функцию нахождения площади круга, исходя из его радиуса. PI * r^2\r\nfunction circleArea(radius: number): number {\r\n    if (radius<0) throw new Error('The radius cannot be negative.');\r\n    return Math.PI*radius*radius;\r\n}\r\nconst r: number = 5;\r\nconst area: number = circleArea(r);\r\nconsole.log(`Area of ​​a circle with radius: ${r} = ${area.toFixed(2)}`);\r\n\r\ninterface User {\r\n    name: string;\r\n    age: number;\r\n    email: string;\r\n}\r\nconst userObj: User = {\r\n    name: 'John',\r\n    age: 30,\r\n    email: 'example@gmail.com',\r\n};\r\n\r\nconst userObj2: { name: string, age: number, email: string } = {\r\n    name: 'John',\r\n    age: 30,\r\n    email: 'example@gmail.com',\r\n};\r\n\r\nfunction printUserInfo(user: { name: string, age: number, email: string }): void {\r\n    console.log(`Name: ${user.name}`);\r\n    console.log(`Age: ${user.age}`);\r\n    console.log(`Email: ${user.email}`);\r\n};\r\n\r\nfunction printUserInfo2(user: User): void {\r\n    console.log(`Name: ${user.name}`);\r\n    console.log(`Age: ${user.age}`);\r\n    console.log(`Email: ${user.email}`);\r\n};\r\n\r\nprintUserInfo(userObj);\r\nprintUserInfo2(userObj);\r\n\r\nfunction message(textMessage: string): string {\r\n    return `Text message: ${textMessage}`\r\n}\r\nconsole.log('Hallo, Bob');\r\n"]}